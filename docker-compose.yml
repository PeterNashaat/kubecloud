services:
  redis-db:
    image: redis:alpine
    command: redis-server --requirepass pass
    ports:
      - 6379:6379
    container_name: redis-db
    networks:
      - app-network

  mycelium:
    build:
      context: ./mycelium-peer
      dockerfile: Dockerfile
    container_name: mycelium
    cap_add: # Required for TUN device creation by mycelium process
      - NET_ADMIN
      - SYS_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "8080:8080" # exposes the backend API
    networks:
      - app-network # connect to redis with network
    volumes:
      - mycelium-data:/var/lib/mycelium
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - redis-db
      - mycelium
    working_dir: /opt/project
    volumes:
      - ./backend/myceliumCloud.db:/app/myceliumCloud.db
      - ./backend/config.json:/app/config.json
      - ./backend/notification-config.json:/opt/project/notification-config.json
      - ./backend/logs:/opt/project/logs
      - /Users/codescalerseg/.ssh:/root/.ssh:ro
    environment:
      - MYCELIUM_HOST=localhost
      - REDIS_HOST=redis-db
      - REDIS_PORT=6379
      - APP_ENV=dev
      - HOSTNAME=backend-1 
      - TEMPLATE_DIR=/app/internal/templates/notifications
    command: ["/myceliumcloud", "--config", "/app/config.json"]
    network_mode: "service:mycelium" # inherits mycelium's network, including app-network access

  frontend:
    environment:
      - VITE_API_BASE_URL=http://localhost:8080/api
      - VITE_STRIPE_PUBLISHABLE_KEY=pk_test_51Rdp72C4WqB88qsawZgMYCdQo9t6AMBJktvBAwvca8qYHwDobDihxmesYs3oisucfGmk7n0FmLBPdizSTCjlwPcu005CEA2vQ8
      - VITE_NETWORK="dev"
    build:
      context: frontend/kubecloud/.
      dockerfile: Dockerfile
    ports:
      - "8000:80"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=30d"
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - app-network

  grafana-gen:
    build: ./grafana-gen
    depends_on:
      - grafana
    environment:
      - GRAFANA_URL=http://grafana:3000
      - GRAFANA_USER=admin
      - GRAFANA_PASSWORD=admin
    networks:
      - app-network
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml
      - loki-data:/loki
    networks:
      - app-network
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./loki/promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - /var/log:/var/log
      - ./backend/logs:/app/logs
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      - loki
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  mycelium-data: 
  prometheus-data:
  loki-data:
